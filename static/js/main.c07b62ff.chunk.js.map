{"version":3,"sources":["component/App.js","index.js"],"names":["applyDrag","arr","dragResult","removedIndex","addedIndex","payload","result","itemToAdd","splice","bgColors","App","state","bgColor","colorBoolean","listTilteEdit","addCardOpen","addListOpen","trello","type","props","orientation","children","id","title","className","description","comments","comment","inputRef","createRef","getCardPayload","columnId","index","filter","p","onColumnDrop","dropResult","Object","assign","setState","onCardDrop","column","columnIndex","indexOf","newColumn","closeOpened","e","target","classList","contains","current","value","toggleBGMenu","prevState","listTitleOpen","nextSibling","focus","listTitleClose","listTitleChange","listId","trim","map","list","cardTitleResize","keyCode","shiftKey","addCard","style","height","scrollHeight","generateCardId","cards","length","Math","max","split","$cardAddTextarea","document","querySelector","removeCard","cardId","card","generateListId","lists","addList","removeList","this","backgroundColor","onClick","color","i","key","changeBgColor","onDrop","dragHandleSelector","dropPlaceholder","animationDuration","showOnTop","onChange","onBlur","groupName","onDragStart","console","log","onDragEnd","getChildPayload","dragClass","dropClass","onDragEnter","onDragLeave","onDropReady","dropPlaceholderAnimationDuration","placeholder","onKeyUp","spellCheck","ref","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c07b62ff.chunk.js","sourcesContent":["import React, { Component, createRef } from 'react'\nimport { Container, Draggable } from \"react-smooth-dnd\";\nimport './App.scss';\nimport 'font-awesome/css/font-awesome.min.css';\n\nconst applyDrag = (arr, dragResult) => {\n  const { removedIndex, addedIndex, payload } = dragResult;\n  if (removedIndex === null && addedIndex === null) return arr;\n\n  const result = [...arr];\n  let itemToAdd = payload;\n\n  if (removedIndex !== null) {\n    itemToAdd = result.splice(removedIndex, 1)[0];\n  }\n\n  if (addedIndex !== null) {\n    result.splice(addedIndex, 0, itemToAdd);\n  }\n\n  return result;\n};\n\nconst bgColors = ['#0079BF', '#D29034', '#4BBF6B', '#B03642'];\n\nclass App extends Component {\n  state = {\n    bgColor: '#0079BF',\n    colorBoolean: false,\n    listTilteEdit: '-1',\n    addCardOpen: '-1',\n    addListOpen: false,\n    trello: {\n      type: 'container',\n      props: {\n        orientation: 'horizontal'\n      },\n      children: [\n        {\n          id: '0',\n          title: 'todo1',\n          type: 'container',\n          props: {\n            orientation: 'vertical',\n            className: 'card-container'\n          },\n          children: [\n            {\n              id: '00',\n              title: 'todo1-1',\n              description: 'todo1-1',\n              comments: [\n                {\n                  id: 0,\n                  comment: 'todo1-1',\n                }\n              ],\n              type: 'draggable',\n              props: {\n                className: 'card',\n              },\n            },\n            {\n              id: '01',\n              title: 'todo1-2',\n              description: 'todo1-2',\n              comments: [\n                {\n                  id: 0,\n                  comment: 'todo1-2',\n                }\n              ],\n              type: 'draggable',\n              props: {\n                className: 'card',\n              },\n            },\n          ],\n        },\n        {\n          id: '1',\n          title: 'todo2',\n          type: 'container',\n          props: {\n            orientation: 'vertical',\n            className: 'card-container'\n          },\n          children: [\n            {\n              id: '10',\n              title: 'todo2-1',\n              description: 'todo2-1',\n              comments: [\n                {\n                  id: 0,\n                  comment: 'todo2-1',\n                }\n              ],\n              type: 'draggable',\n              props: {\n                className: 'card',\n              },\n            },\n            {\n              id: '11',\n              title: 'todo2-2',\n              description: 'todo2-2',\n              comments: [\n                {\n                  id: 0,\n                  comment: 'todo2-2',\n                }\n              ],\n              type: 'draggable',\n              props: {\n                className: 'card',\n              },\n            },\n          ],\n        },\n      ],\n    },\n  };\n  inputRef = createRef();\n\n  getCardPayload = (columnId, index) => {\n    return this.state.trello.children.filter(p => p.id === columnId)[0].children[\n      index\n    ];\n  }\n\n  onColumnDrop = dropResult => {\n    const trello = Object.assign({}, this.state.trello);\n    trello.children = applyDrag(trello.children, dropResult);\n    this.setState({\n      trello\n    });\n  }\n\n  onCardDrop = (columnId, dropResult) => {\n    if (dropResult.removedIndex !== null || dropResult.addedIndex !== null) {\n      const trello = Object.assign({}, this.state.trello);\n      const column = trello.children.filter(p => p.id === columnId)[0];\n      const columnIndex = trello.children.indexOf(column);\n\n      const newColumn = Object.assign({}, column);\n      newColumn.children = applyDrag(newColumn.children, dropResult);\n      trello.children.splice(columnIndex, 1, newColumn);\n\n      this.setState({\n        trello\n      });\n    }\n  }\n\n  closeOpened = (e) => {\n    if (!(e.target.classList.contains('bg-change-box') || e.target.classList.contains('bg-change-btn') || e.target.classList.contains('fa-paint-brush'))) {\n      this.setState({ colorBoolean: false });\n    }\n    if (!(e.target.classList.contains('list-card-composer-textarea') ||\n          e.target.classList.contains('textarea-box') ||\n          e.target.classList.contains('add-btn') ||\n          e.target.classList.contains('add-card-btn') ||\n          e.target.classList.contains('fa-plus') ||\n          e.target.classList.contains('card-composer'))) {\n      this.setState({ addCardOpen: '-1' });\n    }\n    if (!(e.target.classList.contains('add-list-btn') ||\n          e.target.classList.contains('fa-plus') ||\n          e.target.classList.contains('add-list-wrap') ||\n          e.target.classList.contains('list-title-input') ||\n          e.target.classList.contains('add-btn') ||\n          e.target.classList.contains('card-composer'))) {\n      this.setState({ addListOpen: false });\n      this.inputRef.current.value = '';\n    }\n  }\n\n  toggleBGMenu = () => {\n    this.setState(prevState => ({ colorBoolean: !prevState.colorBoolean }));\n  }\n\n  changeBgColor(bgColor) {\n    this.setState({ colorBoolean: false, bgColor });\n  }\n\n  listTitleOpen = (e, listTilteEdit) => {\n    e.target.nextSibling.focus()\n    this.setState({ listTilteEdit });\n  }\n\n  listTitleClose = () => {\n    this.setState({ listTilteEdit: '-1' });\n  }\n\n  listTitleChange = (e, listId) => {\n    const title = e.target.value;\n    if (!title.trim()) return;\n    this.setState(prevState => {\n      return {\n        trello: {\n          ...prevState.trello,\n          children: [...prevState.trello.children].map(list => {\n            return list.id === listId ? { ...list, title } : list\n          })\n        },\n      };\n    });\n  }\n\n  cardTitleResize = (e, listId) => {\n    if (e.keyCode === 13) {\n      if (!e.target.value) return;\n      if (!e.shiftKey) {\n        this.addCard(listId);\n      }\n    } else {\n      e.target.style.height = '1px';\n      e.target.style.height = `${e.target.scrollHeight}px`;\n    }\n  }\n\n  generateCardId = (cards) => {\n    return cards.length ? Math.max(...cards.map(({ id }) => id.split('')[1] * 1)) + 1 : 0;\n  }\n\n  addCard = (listId) => {\n    const $cardAddTextarea = document.querySelector(`#textarea${listId}`);\n    const title = $cardAddTextarea.value;\n    if (!title.trim()) return;\n    this.setState(prevState => {\n      return {\n        trello: {\n          ...prevState.trello,\n          children: [...prevState.trello.children].map(list => {\n            return list.id === listId ? { ...list, children: [...list.children, {\n              id: `${listId}${this.generateCardId(list.children)}`,\n              title,\n              description: '',\n              comments: [],\n              type: 'draggable',\n              props: {\n                className: 'card',\n              },\n            }] } : list\n          })\n        },\n      };\n    });\n    $cardAddTextarea.value = '';\n  }\n\n  addCardOpen = (addCardOpen) => {\n    document.querySelector(`#textarea${addCardOpen}`).focus();\n    this.setState({ addCardOpen })\n  }\n\n  removeCard = (listId, cardId) => {\n    this.setState(prevState => {\n      return {\n        trello: {\n          ...prevState.trello,\n          children: [...prevState.trello.children].map(list => {\n            return list.id === listId ? { ...list, children: [...list.children.filter(card => card.id !== cardId)] } : list\n          })\n        },\n      };\n    });\n  }\n\n  addListOpen = () => {\n    this.setState({ addListOpen : true });\n    this.inputRef.current.focus();\n  }\n\n  generateListId = (lists) => {\n    return lists.length ? Math.max(...lists.map(({ id }) => id * 1)) + 1 : 0;\n  }\n\n  addList = (e) => {\n    const title = this.inputRef.current.value;\n    if (!(e.keyCode === 13 || e.type === 'click') || !title.trim()) return;\n    this.setState(prevState => {\n      return {\n        trello: {\n          ...prevState.trello,\n          children: [...prevState.trello.children, {\n            id: `${this.generateListId(prevState.trello.children)}`,\n            title,\n            type: 'container',\n            props: {\n              orientation: 'vertical',\n              className: 'card-container'\n            },\n            children: [],\n          }]\n        },\n      };\n    });\n    this.inputRef.current.value = '';\n  }\n\n  removeList = (listId) => {\n    this.setState(prevState => {\n      return {\n        trello: {\n          ...prevState.trello,\n          children: [...prevState.trello.children.filter(list => {\n            return list.id !== listId\n          })]\n        },\n      };\n    });\n  }\n\n  render() {\n    return (\n      <section className=\"wrapper\" style={{ backgroundColor: this.state.bgColor }} onClick={this.closeOpened}>\n        <header>\n          <h1 className=\"logo\"><i className=\"fa fa-trello\"></i> Trello</h1>\n          <button className=\"bg-change-btn\" onClick={this.toggleBGMenu}>\n            <i className=\"fa fa-paint-brush\"></i>\n          </button>\n          {this.state.colorBoolean\n            ? (\n              <div className=\"bg-change-box\">\n                {bgColors.map((color , i) => {\n                  return <div key={i} className=\"color-picker\" style={{ backgroundColor: color }} onClick={() => (this.changeBgColor(color))}></div>;\n                })}\n              </div>\n            )\n            : ''\n          }\n        </header>\n        <section className=\"board-title-wrap\">\n          <h2 className=\"board-title\">projectTitle</h2>\n        </section>\n        <section className=\"card-trello\">\n          <Container\n            orientation=\"horizontal\"\n            onDrop={this.onColumnDrop}\n            dragHandleSelector=\".column-drag-handle\"\n            dropPlaceholder={{\n              animationDuration: 150,\n              showOnTop: true,\n              className: 'cards-drop-preview'\n            }}\n          >\n            {this.state.trello.children.map(column => {\n              return (\n                <Draggable key={column.id}>\n                  <div className={column.props.className}>\n                    <div className={`card-column-header${this.state.listTilteEdit === column.id ? ' is-edit' : ''}`}>\n                      <span\n                        className=\"column-drag-handle\"\n                        onClick={(e) => (this.listTitleOpen(e, column.id))}\n                      ></span>\n                      <textarea className=\"list-title\" value={column.title} onChange={(e) => (this.listTitleChange(e, column.id))}\n                        onBlur={this.listTitleClose}></textarea>\n                      <button className=\"list-delete-btn\" onClick={() => (this.removeList(column.id))}>\n                        <i className=\"fa fa-trash-o\"></i>\n                        </button>\n                    </div>\n                    <Container\n                      {...column.props}\n                      groupName=\"col\"\n                      onDragStart={e => console.log(\"drag started\", e)}\n                      onDragEnd={e => console.log(\"drag end\", e)}\n                      onDrop={e => this.onCardDrop(column.id, e)}\n                      getChildPayload={index =>\n                        this.getCardPayload(column.id, index)\n                      }\n                      dragClass=\"card-ghost\"\n                      dropClass=\"card-ghost-drop\"\n                      onDragEnter={() => {\n                        console.log(\"drag enter:\", column.id);\n                      }}\n                      onDragLeave={() => {\n                        console.log(\"drag leave:\", column.id);\n                      }}\n                      onDropReady={p => console.log('Drop ready: ', p)}\n                      dropPlaceholder={{                      \n                        animationDuration: 150,\n                        showOnTop: true,\n                        className: 'drop-preview' \n                      }}\n                      dropPlaceholderAnimationDuration={200}\n                    >\n                      {column.children.map(card => {\n                        return (\n                          <Draggable key={card.id}>\n                            <div {...card.props}>\n                              <button className=\"card-open-btn\">{card.title}</button>\n                              <span className=\"remove-card-btn\" onClick={() => (this.removeCard(column.id, card.id))}>\n                                <i className=\"fa fa-trash-o\"></i>\n                              </span>\n                            </div>\n                          </Draggable>\n                        );\n                      })}\n                    </Container>\n                    <div className={`card-composer${this.state.addCardOpen !== column.id ? ' readable-hidden' : ''}`}>\n                      <div className=\"textarea-box\">\n                        <textarea className=\"list-card-composer-textarea\" placeholder=\"Enter a title for this card…\"\n                          onKeyUp={(e) => (this.cardTitleResize(e, column.id))} spellCheck=\"false\" id={`textarea${column.id}`}></textarea>\n                      </div>\n                      <button className=\"add-btn\" onClick={() => (this.addCard(column.id))}>Add Card</button>\n                      <button className=\"cancle-btn\" onClick={() => (this.setState({ addCardOpen: '-1' }))}>\n                        <i className=\"fa fa-times\"></i>\n                      </button>\n                    </div>\n                    <button\n                      className={`add-card-btn${this.state.addCardOpen === column.id ? ' readable-hidden' : ''}`}\n                      onClick={() => (this.addCardOpen(column.id))}\n                    >\n                      <i className=\"fa fa-plus\"></i> Add Card\n                    </button>\n                  </div>\n                </Draggable>\n              );\n            })}\n          </Container>\n          <div className=\"list-wrap\">\n            <button\n              className={`add-list-btn${this.state.addListOpen ? ' readable-hidden' : ''}`}\n              onClick={this.addListOpen}>\n              <i className=\"fa fa-plus\"></i> Add List\n            </button>\n            <div className={`add-list-wrap${!this.state.addListOpen ? ' readable-hidden' : ''}`}>\n              <input type=\"text\" ref={this.inputRef} className=\"list-title-input\" onKeyUp={this.addList} placeholder=\"Enter list title...\" />\n              <button className=\"add-btn\" onClick={this.addList}>Add List</button>\n              <button className=\"cancle-btn\" onClick={() => (this.setState({ addListOpen : false }))}><i className=\"fa fa-times\"></i></button>\n            </div>\n          </div>\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\nimport './index.scss';\n\n// import { createStore } from 'redux'\n// import reducers from './reducers';\n// import { Provider } from 'react-redux';\n\n// const store = createStore(reducers);\n\nReactDOM.render(\n  // <Provider store={store}>\n  //   <App />\n  // </Provider>,\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}